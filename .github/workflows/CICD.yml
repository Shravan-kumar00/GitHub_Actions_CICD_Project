name: CICD Pipeline

on: 
  push:
    branches: [ "main" ]

jobs:

  compile:
    runs-on: git-label

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn compile

    - name: Upload JAR Artifact
      uses: actions/upload-artifact@v4
      with:
        name: my-app-jar # Unique artifact name
        path: target/*.jar  # Exact JAR file path (replace with your actual file)

  security-check:
    runs-on: git-label
    needs: compile

    steps:
    - uses: actions/checkout@v4
    - name: Trivy scan
      run: trivy fs --format table -o fs-report.json .
    - name: Gitleaks install
      run: sudo apt install gitleaks -y
    - name: Gitleaks scan
      run: gitleaks detect source . -r gitleaks-report.json -f json

  test:
    runs-on: git-label
    needs: security-check

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Unit test case
      run: mvn test

  sonar-build-scan:
    runs-on: git-label
    needs: test

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build project
      run: mvn package
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v5.1.0
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  buils_docker_image_and_push:
    runs-on: git-label
    needs: sonar-build-scan
    steps:
    - uses: actions/checkout@v4
    - name: Download JAR artifact
      uses: actions/download-artifact@v4
      with:
        name: my-app-jar
        path: app  # this will download JAR to ./app folder
        
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and Push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: shravan001/bankapp:latest
        file: ./Dockerfile
