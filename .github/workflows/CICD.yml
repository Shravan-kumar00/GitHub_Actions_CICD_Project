name: CICD Pipeline

on:  # Trigger like webhook in jenkins
  push:
    branches: [ "main" ]

jobs:

  compile:
    runs-on: git-label

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn compile


    - name: Upload JAR Artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-jar
        path: target/*.jar
  
  security-check:
    runs-on: git-label
    needs: compile  #initiates after 1st job is successful

    steps:
    - uses: actions/checkout@v4
   
    - name: Trivy scan
      run: trivy fs --format table -o fs-report.json .


    - name: Gitleasks install
      run: sudo apt install gitleaks -y


    - name: Gitleasks scan
      run: gitleaks detect source . -r gitleaks-report.json -f json 


  test:
    runs-on: git-label
    needs: security-check

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: unit test case
      run: mvn test

  sonar-build-scan:
    runs-on: git-label
    needs: test

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: build project
      run: mvn package

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v5.1.0 # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      with:
          pollingTimeoutSec: 600
      env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}


docker image build and push:
    runs-on: git-label
    needs: sonar-build-scan

    steps:
    - uses: actions/checkout@v4
    - name: Download JAR Artifact
      uses: actions/download-artifact@v4
      with:
        name: app-jar
        path: app

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
        
    - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: shravan001/bankapp:latest
        
